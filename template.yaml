AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  minha-carteira

  Sample SAM Template for minha-carteira


Parameters:
  LogLevel:
    Type: String
    Description: Application log level
    Default: INFO
    AllowedValues:
      - DEBUG
      - INFO
      - WARNING
      - ERROR
      - CRITICAL

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10
    Environment:
      Variables:
        LOG_LEVEL: !Ref LogLevel

Resources:
  MinhaCarteiraApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors: "'*'"
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: s3://minha-carteira-bucket/api/swagger.yaml

      Auth:
        # DefaultAuthorizer: MyLambdaTokenAuthorizer
        # Authorizers:
        #   MyLambdaTokenAuthorizer:
        #     FunctionArn: !GetAtt UserLoginFunction.Arn
        ResourcePolicy:
            CustomStatements:
              [
                {
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": "execute-api:Invoke",
                    "Resource": "*"
                }
            ]

# Layers
  CommonFileLayers:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: CommonFileLayers
      Description: Python3.8 utility functions -- {common}
      RetentionPolicy: Delete
      ContentUri: layers/common-layer/package.zip
      CompatibleRuntimes:
        - python3.8

  YahooFinanceLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: YahooFinanceLayer
      Description: Python3.8 Yahoo Finance Layer -- {yfinance, requests, pandas}
      RetentionPolicy: Delete
      ContentUri: layers/yf-layer
      CompatibleRuntimes:
        - python3.8
    Metadata:
      BuildMethod: python3.8              # Required to have AWS SAM build this layer

# Functions
  StockPriceMultipleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: stock-price-multiple/
      Handler: app.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Layers:
        - !Ref CommonFileLayers
        - !Ref YahooFinanceLayer
      Events:
        MultipleStockCurrentPrice:
          Type: Api
          Properties:
            Path: /price/now
            Method: post
            RestApiId:
              Ref: MinhaCarteiraApi

  StockPriceNowFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: stock-price-now/
      Handler: app.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Layers:
        - !Ref CommonFileLayers
        - !Ref YahooFinanceLayer
      Events:
        StockCurrentPrice:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /price/now/{stock}
            Method: get
            RestApiId:
              Ref: MinhaCarteiraApi

  UserCrudFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: user-crud/
      Handler: app.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Layers:
        - !Ref CommonFileLayers
      Events:
        GetAllUsers:
          Type: Api
          Properties:
            Path: /user
            Method: get
            RestApiId:
              Ref: MinhaCarteiraApi
        CreateUser:
          Type: Api
          Properties:
            Path: /user
            Method: post
            RestApiId:
              Ref: MinhaCarteiraApi
        GetUser:
          Type: Api
          Properties:
            Path: /user/{id}
            Method: get
            RestApiId:
              Ref: MinhaCarteiraApi
        UpdateUser:
          Type: Api
          Properties:
            Path: /user/{id}
            Method: put
            RestApiId:
              Ref: MinhaCarteiraApi
        DeleteUser:
          Type: Api
          Properties:
            Path: /user/{id}
            Method: delete
            RestApiId:
              Ref: MinhaCarteiraApi


Outputs:
  # MinhaCarteiraApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  MinhaCarteiraApi:
    Description: "API Gateway endpoint URL for Prod stage for Stock Price function"
    Value: !Sub "https://${MinhaCarteiraApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

  StockPriceNowFunction:
    Description: "Current stock price Lambda Function ARN"
    Value: !GetAtt StockPriceNowFunction.Arn
  StockPriceMultipleFunction:
    Description: "Multiple stocks prices Lambda Function ARN"
    Value: !GetAtt StockPriceMultipleFunction.Arn

  StockPriceNowFunctionIamRole:
    Description: "Implicit IAM Role created for Stock Price function"
    Value: !GetAtt StockPriceNowFunctionRole.Arn
  StockPriceMultipleFunctionIamRole:
    Description: "Implicit IAM Role created for Stock Price function"
    Value: !GetAtt StockPriceMultipleFunctionRole.Arn