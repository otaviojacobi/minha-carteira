AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  minha-carteira

  Sample SAM Template for minha-carteira


Parameters:
  LogLevel:
    Type: String
    Description: Application log level
    Default: INFO
    AllowedValues:
      - DEBUG
      - INFO
      - WARNING
      - ERROR
      - CRITICAL

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10
    Environment:
      Variables:
        LOG_LEVEL: !Ref LogLevel

Resources:
  MinhaCarteiraApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      # Allows www.example.com to call these APIs
      # SAM will automatically add AllowMethods with a list of methods for this API
      Cors: "'*'"
      DefinitionBody:
        swagger: "2.0"
        info:
          description: "Minha Carteira API"
          version: "1.0.0"
          title: "Minha Carteira API"
        paths:
          /price:
            post:
              consumes:
              - "application/json"
              produces:
              - "application/json"
              parameters:
              - in: "body"
                name: "body"
                required: true
                schema:
                  type: array
                  items:
                    type: string
              responses:
                "200":
                  description: "Success"
                  content:
                    application/json:
                      schema:
                        type: array
                        items:
                          $ref: '#/schemas/StockResponse'

                "400":
                  description: "Bad Request"
                  content:
                    application/json:
                      schema:
                        $ref: '#/schemas/ErrorResponse'

              x-amazon-apigateway-integration:
                type: aws_proxy
                httpMethod: POST
                uri:
                  Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${StockPriceMultipleFunction.Arn}/invocations"

              x-amazon-apigateway-policy:
                Version: "2012-10-17"
                Statement:
                - Effect: "Allow"
                  Principal: "*"
                  Action: "execute-api:Invoke"
                  Resource: "*"

          /price/{stock}/now:
            get:
              produces:
              - "application/json"
              parameters:
              - name: "stock"
                in: "path"
                required: true
                type: string
              responses:
                "200":
                  description: "Success"
                  content:
                    application/json:
                      schema:
                        $ref: '#/schemas/StockResponse'
                "400":
                  description: "Bad Request"
                  content:
                    application/json:
                      schema:
                        $ref: '#/schemas/ErrorResponse'
              x-amazon-apigateway-integration:
                type: aws_proxy
                httpMethod: POST
                uri:
                  Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${StockPriceNowFunction.Arn}/invocations"

              x-amazon-apigateway-policy:
                Version: "2012-10-17"
                Statement:
                - Effect: "Allow"
                  Principal: "*"
                  Action: "execute-api:Invoke"
                  Resource: "*"
        
        schemas:
          StockResponse:
            type: object
            required:
              - stock
              - price
              - timestamp
            properties:
              stock:
                type: string
              price:
                type: float
              timestamp:
                type: string

          ErrorResponse:
            type: object
            required:
              - message
            properties:
              message:
                type: string
      Auth:
        ResourcePolicy:
            CustomStatements:
              [
                {
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": "execute-api:Invoke",
                    "Resource": "*"
                }
            ]

# Layers
  CommonFileLayers:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: CommonFileLayers
      Description: Python3.8 utility functions -- {common}
      RetentionPolicy: Delete
      ContentUri: layers/common-layer/package.zip
      CompatibleRuntimes:
        - python3.8

  YahooFinanceLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: YahooFinanceLayer
      Description: Python3.8 Yahoo Finance Layer -- {yfinance, requests, pandas}
      RetentionPolicy: Delete
      ContentUri: layers/yf-layer
      CompatibleRuntimes:
        - python3.8
    Metadata:
      BuildMethod: python3.8              # Required to have AWS SAM build this layer

# Functions
  StockPriceMultipleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: stock-price-multiple/
      Handler: app.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Events:
        MultipleStockCurrentPrice:
          Type: Api
          Properties:
            Path: /price
            Method: post
            RestApiId:
              Ref: MinhaCarteiraApi
      Layers:
        - !Ref CommonFileLayers
        - !Ref YahooFinanceLayer

  StockPriceNowFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: stock-price-now/
      Handler: app.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Events:
        StockCurrentPrice:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /price/{stock}/now
            Method: get
            RestApiId:
              Ref: MinhaCarteiraApi
      Layers:
        - !Ref CommonFileLayers
        - !Ref YahooFinanceLayer

Outputs:
  # MinhaCarteiraApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  MinhaCarteiraApi:
    Description: "API Gateway endpoint URL for Prod stage for Stock Price function"
    Value: !Sub "https://${MinhaCarteiraApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

  StockPriceNowFunction:
    Description: "Current stock price Lambda Function ARN"
    Value: !GetAtt StockPriceNowFunction.Arn
  StockPriceMultipleFunction:
    Description: "Multiple stocks prices Lambda Function ARN"
    Value: !GetAtt StockPriceMultipleFunction.Arn

  StockPriceNowFunctionIamRole:
    Description: "Implicit IAM Role created for Stock Price function"
    Value: !GetAtt StockPriceNowFunctionRole.Arn
  StockPriceMultipleFunctionIamRole:
    Description: "Implicit IAM Role created for Stock Price function"
    Value: !GetAtt StockPriceMultipleFunctionRole.Arn